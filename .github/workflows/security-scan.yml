name: Security Scanning

on:
  push:
    branches: ['main', 'claude/**', 'feature/**']
  pull_request:
    branches: ['*']
  schedule:
    # Run weekly on Monday at 9am UTC
    - cron: '0 9 * * 1'

permissions:
  contents: read
  security-events: write

jobs:
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run secretlint
        run: npm run secrets:check
        continue-on-error: true
        id: secretlint

      - name: Comment on PR if secrets found
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const comment = `## üö® Security Alert: Potential Secrets Detected

            The secret scanning tool detected potential secrets or API keys in your code.

            **Action Required:**
            1. Review the security scan results above
            2. Remove any hardcoded secrets or API keys
            3. Use environment variables instead (see .env.example)
            4. If these are false positives, add them to .secretlintignore

            **Best Practices:**
            - Never commit API keys, passwords, or tokens
            - Use \`.env.local\` for development secrets (already in .gitignore)
            - Use GitHub Secrets for production environment variables
            - Refer to SECURITY.md for more information

            ---
            ü§ñ Automated security scan`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Run npm audit fix
        if: failure()
        run: npm audit fix --dry-run

  gitignore-check:
    name: Verify .gitignore Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for common secret files
        run: |
          echo "Checking for files that should be ignored..."

          # Check for common secret file patterns
          found_issues=false

          if git ls-files | grep -E '\.(env|pem|key|cert)$' | grep -v '.env.example'; then
            echo "‚ùå Found .env, .pem, .key, or .cert files in repository!"
            found_issues=true
          fi

          if git ls-files | grep -E 'secret|credential|password|token' | grep -v -E '(\.md|\.example|test|spec|\.gitignore|secretlint|\.yml|workflow)'; then
            echo "‚ö†Ô∏è Found files with 'secret', 'credential', 'password', or 'token' in name"
            found_issues=true
          fi

          if [ "$found_issues" = true ]; then
            echo ""
            echo "Please review the files above and add them to .gitignore if they contain secrets."
            exit 1
          fi

          echo "‚úÖ No obvious secret files found in repository"
